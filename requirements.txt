# @see https://devcenter.heroku.com/articles/getting-started-with-django#requirements-txt
# Django==1.7c1
https://www.djangoproject.com/download/1.7c1/tarball/
dj-database-url==0.3.0
dj-static==0.0.6
gunicorn==19.0.0
psycopg2==2.5.3

# @see https://devcenter.heroku.com/articles/memcachier#django
# @see https://github.com/rdegges/django-heroku-memcacheify
# pylibmc==1.3.0 is not compatible with Python 3
-e git+git://github.com/lericson/pylibmc.git@py3k#egg=pylibmc
# django-pylibmc==0.5.0 is not compatible with Python 3
# @see https://github.com/jbalogh/django-pylibmc/pull/16
-e git+git://github.com/jpmckinney/django-pylibmc.git#egg=django-pylibmc
# django-heroku-memcacheify==0.5 is not compatible with Python 3
# @see https://github.com/rdegges/django-heroku-memcacheify/pull/14
-e git+git://github.com/jpmckinney/django-heroku-memcacheify.git#egg=django-heroku-memcacheify

# @see http://mysociety.github.io/sayit/install/#installing-sayit-as-a-django-app
# -e git+git://github.com/mysociety/sayit.git#egg=django-sayit
-e git+git://github.com/jpmckinney/sayit.git@hotfix#egg=django-sayit

# Akoma Ntoso importer
python-dateutil==2.2
lxml==3.3.5

# Popolo importer
requests==2.3.0

# pylibmc doesn't build in Python 3.4, possibly due to http://bugs.python.org/issue21121
# CFLAGS="-std=c99" can be used to avoid the error locally, but not on Heroku.
